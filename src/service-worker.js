/* eslint-disable no-restricted-globals */

import { clientsClaim } from 'workbox-core';
import { ExpirationPlugin } from 'workbox-expiration';
import { precacheAndRoute } from 'workbox-precaching';
import { registerRoute } from 'workbox-routing';
import { StaleWhileRevalidate } from 'workbox-strategies';

clientsClaim();

// Precache all of the assets generated by your build process.
precacheAndRoute(self.__WB_MANIFEST);

// Set up App Shell-style routing
const fileExtensionRegexp = new RegExp('/[^/?]+\\.[^/]+$');
registerRoute(
  // Return true to cache all navigation requests with the StaleWhileRevalidate strategy
  ({ request, url }) => {
    if (request.mode === 'navigate') {
      return true;
    }

    // If this is a URL that starts with /_, skip (this includes service worker and other config URLs)
    if (url.pathname.startsWith('/_')) {
      return false;
    }

    // If this looks like a URL for a resource, because it contains a file extension, skip.
    if (url.pathname.match(fileExtensionRegexp)) {
      return false;
    }

    // Default to caching with StaleWhileRevalidate for all other requests
    return true;
  },
  new StaleWhileRevalidate({
    cacheName: 'clearance-calculator-cache',
    plugins: [
      new ExpirationPlugin({
        maxEntries: 100, // Adjust as necessary
        maxAgeSeconds: 365 * 24 * 60 * 60, // 1 year
      }),
    ],
  })
);

// This allows the web app to trigger skipWaiting via
self.addEventListener('message', (event) => {
  if (event.data && event.data.type === 'SKIP_WAITING') {
    self.skipWaiting();
  }
});
